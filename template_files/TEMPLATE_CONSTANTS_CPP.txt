
#pragma once

#include "Constants.h"

{% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE
namespace {{NAME}}
{
## endfor
{% endif %}

## for CONSTANT in CONSTANTS
  {#{CONSTANT}#}
  ///<{{CONSTANT.CONST_NAME}}  {{CONSTANT.CONST_DESCRIPTION}}
  bool {{CONSTANT.CONST_NAME}}::IsValid(const {{RevisedType(CONSTANT.CONST_PRIMITIVE_TYPE,CONSTANT.CONST_LENGTH)}}& value)
  {
## for FIELD in CONSTANT.FIELDS
      {% if loop.is_first %}       
      return (
                value==k{{FIELD.F_NAME}} ///<{{FIELD.F_DESCRIPTION}}
      {% endif %}
      {% if not loop.is_first and not loop.is_last %}
              ||value==k{{FIELD.F_NAME}} ///<{{FIELD.F_DESCRIPTION}}
      {% endif %}
      {% if loop.is_last %}
              ||value==k{{FIELD.F_NAME}} ///<{{FIELD.F_DESCRIPTION}}
             );
      {% endif %}
## endfor
  }

## endfor

{% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE
} ///<end of namespace {{NAME}}
## endfor
{% endif %}