
#pragma once

#include"AutoFactory.h"
//#include"MpCustomKey.h"
#include"MessageBase.h"
#include"MpTypes.h"

{% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE
namespace {{NAME}}
{
## endfor
{% endif %}

//struct {{FILENAME}}{};
//using {{FILENAME}}MessageFactory = mp::factory<MpCustomKey<{{FILENAME}}>, mp::MessageBase>;

using {{FILENAME}}MessageFactory = mp::factory<mp::MsgType_Def , mp::MessageBase>;



{% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE
} ///<end of namespace {{NAME}}
## endfor
{% endif %}

///<消息注册
#define REGIST_{{upper(FILENAME)}}_MESSAGE(msg_no,MESSAGE) {% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE{{NAME}}::
## endfor
{% endif %}{{FILENAME}}MessageFactory::register_t<MESSAGE> s_##MESSAGE##msg_no(msg_no)

///<消息创建
#define CREATE_{{upper(FILENAME)}}_MESSAGE(msg_no){% if length(NAMESPACE) > 0 %}
## for NAME in NAMESPACE{{NAME}}::
## endfor
{% endif %}{{{FILENAME}}MessageFactory::get().create(msg_no);